/**
 * 
 */
package judp;

import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Logger;

import udt.UDTSession;
import udt.UDTSocket;


/**
 * 
 *     
 * 项目名称：judt    
 * 类名称：judpGroupSocket    
 * 类描述：    按照目的地址分组socket
 * 创建人：jinyu    
 * 创建时间：2018年8月25日 上午10:53:59    
 * 修改人：jinyu    
 * 修改时间：2018年8月25日 上午10:53:59    
 * 修改备注：    
 * @version   1.0   
 *
 */
public class judpGroupSocket {
private ArrayList<UDTSocket> list=new ArrayList<UDTSocket>();
private static final Logger logger=Logger.getLogger(judpGroupSocket.class.getName());
public judpGroupSocket()
{
	
}

/**
 * 添加socket
 * @param socket
 */
public void addSocket(UDTSocket socket)
{
	list.add(socket);
}

/**
 * 获取有数据socket
 * 并且移除其它无用socket
 * @return
 */
public UDTSocket getSocket()
{
	
	int index=-1;
	int size=list.size();
	for( int i = 0 ; i < size ; i++) {
	    try {
	    	if(index==-1)
	    	{
			  if(list.get(i).getInputStream().isHasData())
			   {
				 //已经找到；其余的移除关
				  index=i;
				   i=-1;//重新遍历
			   }
			  //
			  UDTSession session=list.get(i).getSession();
			  if(session.getState()==UDTSession.shutdown)
			  {
				  //说明已经关闭
				     list.get(i).close();
	    			long id=list.get(i).getSession().getSocketID();
	    			list.get(i).getEndpoint().removeSession(id);
	    			list.get(i).getReceiver().stop();
	    			list.get(i).getSender().stop();
	    			list.get(i).getSender().pause();
	    			list.remove(i);
	    			i--;
			  }
	    	}
	    	else
	    	{
	    		//
	    		if(i==index)
	    		{
	    			continue;
	    		}
	    		else
	    		{
	    			list.get(i).close();
	    			long id=list.get(i).getSession().getSocketID();
	    			list.get(i).getEndpoint().removeSession(id);
	    			list.get(i).getReceiver().stop();
	    			list.get(i).getSender().stop();
	    			list.get(i).getSender().pause();
	    			logger.info("移除无用socket:"+id);
	    		}
	    		
	    	}
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	if(index!=-1)
	{
		return list.get(index);
	}
	return null;
	
}

/**
 * 清除所有socket
 */
public void clear()
{
	list.clear();
}
}
